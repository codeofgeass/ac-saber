//XBD
#include<iostream>

using namespace std;
const int N = 1000100;

void merge_sort(int q[], int l, int r)
{
    if(l >= r) return;
    int mid = (l + r) >> 1;
    merge_sort(q, l, mid),merge_sort(q, mid + 1, r);
    int k = 0, i = l, j = mid + 1, tmp[r - l + 1];
    while(i <= mid && j <= r)
        if(q[i] <= q[j]) tmp[k++] = q[i++];
        else tmp[k++] = q[j++];
    while(i <= mid) tmp[k++] = q[i++];
    while(j <= r) tmp[k++] = q[j++];
    for(k = 0, i = l; i <= r; k++, i++)
        q[i] = tmp[k];

}

int main()
{
        int a[N] = {0}, n = 0;
        cin >> n;
        for(int i = 0; i < n; i++)
            cin >> a[i];
        merge_sort(a, 0, n - 1);
        for(int i = 0; i < n; i++)
            cout << a[i] << " " ;
        return 0;
}
